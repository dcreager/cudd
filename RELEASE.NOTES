Release 2.4.2 of Cudd features several bug fixes.  The most important
are those that prevented Cudd from making full use of up to 4 GB of
memory when using 32-bit pointers.  A handful of bugs were discovered by
Coverity.  (Thanks to Christian Stangier!)

This release can be compiled with either 64-bit pointers or 32-bit
pointers on x86_64 platforms if sizeof(long) = sizeof(void *) = 8 and
sizeof(int) = 4.  This is known as the LP64 model.  For 32-bit pointers,
one usually needs supplementary libraries.  On Ubuntu and Debian Linux,
one needs g++-multilib, which can be installed with
"apt-get install g++-multilib."

Added functions 

DdNode *Cudd_Inequality (DdManager * dd, int  N, int c, DdNode ** x,
DdNode ** y);

DdNode * Cudd_Disequality (DdManager * dd, int  N, int c, DdNode ** x,
DdNode ** y);

DdNode * Cudd_bddInterval (DdManager * dd, int  N, DdNode ** x,
unsigned int lowerB, unsigned int upperB);

Changed prototypes:

int Cudd_DumpBlif (DdManager *dd, int n, DdNode **f, char
**inames, char **onames, char *mname, FILE *fp, int mv);

int Cudd_DumpBlifBody (DdManager *dd, int n, DdNode **f, char
**inames, char **onames, FILE *fp, int mv);

The additional parameter allows the caller to choose between plain blif
and blif-MV.

----------------------------------------------------------------------

Release 2.4.1 of Cudd features one major change with respect to previous
releases.  The licensing terms are now explicitly stated.
